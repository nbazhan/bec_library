config = struct();
grid = struct();
run = struct();
sv = struct();



model = mf.Model();
%model = mf.Model();
V2 = struct('typ', 'toroidal', ...
            'R', [30e-6, 30e-6]);

V1 = struct('typ', 'toroidal', ...
            'w', 2*pi*[300, 635], ...
            'c', struct('xy', [4e-6, 3e-6]), ...
            'R', [35e-6, 35e-6], ...
            'W', 2*pi*1);

model.add_potential(V2);
%model.add_potential(V1);

%model.add_potential(struct('typ', 'vertical', ...
%                           'W', 2*pi*1, ...
%                           'width', 1e-7, ...
%                            'U', struct('max', 4e-30)))

%model.add_potential(struct('typ', 'ladder', ...
%                           'n', 5, ...
%                           'phi', pi*[1, 0.5, 0.6, 0.2, 3]));

%model.add_potential(struct('typ', 'cosine', ...
%                           'n', 2));


%model.add_potential(struct('typ', 'cosine', ...
%                           'n', 100, ...
%                           'R', [6e-6, 8e-6]));

init = mf.Init(struct('model', model));
init.t = model.to_time_dim(0.03);
t = model.to_time_dim(0.03);
%psi = init.get_tf();
v = model.get_v(t);

%psixy = psi(:, :, model.grid.N.z/2);
%imagesc(model.grid.r.x, model.grid.r.y, abs(psixy).^2)
value = 0.05*max(v(:));
p = patch(isosurface(model.grid.r.x, model.grid.r.y, model.grid.r.z, v, value));

alpha(0.1);
p.FaceColor = 'blue';
p.EdgeColor = 'none';
view(5, 25);

ylabel('y');
xlabel('x');
zlabel('z');
colorbar;
%patch(model.grid.X, model.grid.Y, model.grid.Z, abs(psi).^2)
shg